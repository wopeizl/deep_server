package deep_server; 

message input_pack {
    optional int32 size = 1;
    optional input_m data = 2;
}

message output_pack {
    optional int32 size = 1;
    optional output_m data = 2;
}

message consume_time{
    optional float whole_time = 1;
    optional float decode_time = 2;
    optional float cvreadimage_time = 3;
    optional float prepare_time = 4;
    optional float preprocess_time = 5;
    optional float predict_time = 6;
    optional float postprocess_time = 7;
    optional float writeresult_time = 8;
}

enum dataType {
    PNG = 0;
    CV_IMAGE = 1;
    CV_POST_PNG = 3;
    CV_POST_IMAGE = 4;
    FRCNN_RESULT = 5;
    YOLO_RESULT = 6;
    TF_DETECT_RESULT = 7;
    TF_CLASSIFY_RESULT = 8;
    INVALID_OUTDATA = 9;
}

message input_m {
    optional int32 cid = 1;
    optional string version = 2;
    enum methodType {
        CV_FLIP = 0;
        CAFFE = 1;
        YOLO = 2;
        TENSORFLOW = 3;
    }
    optional methodType method = 3 [default = CAFFE];
    optional dataType dataT = 4 [default = CV_IMAGE];
    optional dataType res_dataT = 5 [default = PNG];
    optional bytes imgdata = 6;
    optional string callback = 7;
}

enum Status {
    OK = 0;
    INVALID = 1;
    WRONG_METHOD = 2;
    WRONG_DATATYPE = 3;
    TOO_BIG_DATA = 4;
    SEVER_FAIL = 5;
}

message Caffe_result{
    optional int32 class = 1;
    optional float score = 2;
    optional float x = 3;
    optional float y = 4;
    optional float w = 5;
    optional float h = 6;
}

message Yolo_result{
    optional int32 class = 1;
    optional float score = 2;
    optional float x = 3;
    optional float y = 4;
    optional float w = 5;
    optional float h = 6;
    optional string label = 7;
}

message Tf_detect_result{
    optional int32 class = 1;
    optional float score = 2;
    optional float x = 3;
    optional float y = 4;
    optional float w = 5;
    optional float h = 6;
}

message Tf_classify_result{
    optional int32 class = 1;
    optional float score = 2;
}

message Img_info{
    optional int32 width = 1;
    optional int32 height = 2;
    optional int32 channel = 3;
}

message output_m {
    optional int32 cid = 1;
    optional Status status = 2;
    optional string msg = 3;
    optional string version = 4;
    optional dataType dataT = 5 [default = PNG];
    optional bytes imgdata = 6;  // can be nothing if dataType is FRCNN_RESULT or YOLO_RESULT
    optional string callback = 7;
    optional consume_time time = 8;
    repeated Caffe_result caffe_result = 9;
    repeated Yolo_result yolo_result = 10;
    repeated Tf_detect_result tf_detect_result = 11;
    repeated Tf_classify_result tf_classify_result = 12;
    optional Img_info info = 13;
}
